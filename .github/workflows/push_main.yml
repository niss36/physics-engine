name: "Deploy main"

on:
  push:
    branches:
      - main

concurrency:
  group: push_main

env:
  CARGO_TERM_COLOR: always

jobs:
  build_lint_test:
    name: Build, lint and test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install libx11-dev libxi-dev libgl1-mesa-dev gcc-mingw-w64 libasound2-dev

      - name: cargo fmt
        run: cargo fmt --all --check

      - name: cargo build
        run: cargo build --verbose

      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: cargo test
        run: cargo test --verbose

  deploy_gh_pages:
    name: Deploy to GitHub Pages

    permissions:
      pages: write
      id-token: write
      actions: read

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install WASM toolchain
        run: rustup target add wasm32-unknown-unknown

      - name: Build WASM binary
        run: cargo build --target wasm32-unknown-unknown --release

      - name: Copy static files
        run: |
          mkdir $SITE_DIR
          cp target/wasm32-unknown-unknown/release/physics-engine.wasm $SITE_DIR/physics-engine.wasm
          cp wasm.html $SITE_DIR/wasm.html
        env:
          SITE_DIR: _site

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
